{
  "version": 3,
  "sources": ["../src/globals.js", "../src/next.lumahealth.io/handle_parameters.js", "../src/next.lumahealth.io/main.js"],
  "sourcesContent": ["// import { GetVersion } from \"../version.ts\";\r\nexport const MRN_PARAM = \"dt.mrn\";\r\n// export const VERSION = GetVersion();\r\nexport const ECW_SCOPES = {\r\n  patient_hub: \"patienthubController\",\r\n  faxinbox: \"faxInBoxController\",\r\n  resource_schedule: \"scheduleController\",\r\n  macro: \"macroController\",\r\n  appointment_modal: \"newApptController\",\r\n  new_appt: \"newApptController\",\r\n  document_view: \"documentViewController\",\r\n  ecwassistant_as_assistant: \"ecwassistant as assistant\",\r\n  jellybean_count: \"JellyBeanCountCntrl\",\r\n  // \"healowInsightsWorklistCountController\",\r\n  userpro: \"userProController\",\r\n  add_working_hours_block: \"addWorkingHourBlockController\",\r\n  working_hours: \"workingHoursController\",\r\n  // \"VerificationMethodController\",\r\n  // \"VerificationMethodController\",\r\n  // \"LicenseProviderController as scope\",\r\n  left_nav: \"leftnavController\",\r\n  schedule: \"scheduleController\",\r\n  notification: \"notificationController\",\r\n  status_notification: \"statusNotificationController\",\r\n  pdftron: \"pdfTronController\",\r\n  wcv: \"wcvController\",\r\n  eva_favorite: \"evaFavoriteController\",\r\n};\r\n", "import * as globals from \"../globals.js\";\r\n\r\nasync function getIdForMRN(MRN) {\r\n    // TODO: add url check to make sure this is on lumahealth.io\r\n    const matched_patient = await fetch(\r\n        \"https://api.lumahealth.io/api/v2/patients?_select=name,dateOfBirth,contact,__t,medicalRecordNumber&_sort=name&patientGlobalSearchLimit=50&limit=10&_populate=chatActivity.assignee._id,chatActivity.assignee.name,chatActivity.assignee.type,chatActivity.assignee.roles,chatActivity.assignee.isOnline,chatActivity.groupAssignee.name,chatActivity.groupAssignee.type,chatActivity.automated,chatActivity.status&patientGlobalSearch=\" +\r\n            MRN,\r\n        {\r\n            headers: {\r\n                accept: \"application/json, text/plain, */*\",\r\n                \"x-access-token\": JSON.parse(\r\n                    localStorage.getItem(\"lh:auth_user\"),\r\n                )?.token,\r\n            },\r\n            referrer: \"https://next.lumahealth.io/\",\r\n            body: null,\r\n            method: \"GET\",\r\n            mode: \"cors\",\r\n            credentials: \"omit\",\r\n        },\r\n    )\r\n        .then((r) => r.json())\r\n        .then((j) => j.response[0]);\r\n    if (!matched_patient) {\r\n        alert(\"no match for MRN.\");\r\n    }\r\n    return matched_patient._id;\r\n}\r\n\r\nexport async function HandleUrlParameters(url, params, mrn) {\r\n    if (mrn) {\r\n        params.delete(globals.MRN_PARAM);\r\n        const newUrl =\r\n            url.origin +\r\n            url.pathname +\r\n            (params.toString() ? \"?\" + params.toString() : \"\") +\r\n            url.hash;\r\n        globalThis.history.replaceState({}, document.title, newUrl);\r\n        const lumaId = await getIdForMRN(mrn);\r\n        globalThis.location = `https://next.lumahealth.io/patients/${lumaId}/chat`;\r\n    }\r\n    // globalThis.addEventListener(\"load\", async function () { });\r\n}\r\n", "// handle url parameters\r\nimport * as globals from \"../globals.js\";\r\nimport * as handle_parameters from \"./handle_parameters.js\";\r\n{\r\n}\r\n(async function () {\r\n    const url = new URL(globalThis.location.href);\r\n    const params = new URLSearchParams(url.search);\r\n    const mrn = params.get(globals.MRN_PARAM);\r\n    if (mrn) {\r\n        await handle_parameters.HandleUrlParameters(url, params, mrn);\r\n    }\r\n})();\r\n"],
  "mappings": ";;AACO,MAAM,YAAY;;;ACCzB,iBAAe,YAAY,KAAK;AAE5B,UAAM,kBAAkB,MAAM;AAAA,MAC1B,4aACI;AAAA,MACJ;AAAA,QACI,SAAS;AAAA,UACL,QAAQ;AAAA,UACR,kBAAkB,KAAK;AAAA,YACnB,aAAa,QAAQ,cAAc;AAAA,UACvC,GAAG;AAAA,QACP;AAAA,QACA,UAAU;AAAA,QACV,MAAM;AAAA,QACN,QAAQ;AAAA,QACR,MAAM;AAAA,QACN,aAAa;AAAA,MACjB;AAAA,IACJ,EACK,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC,EACpB,KAAK,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;AAC9B,QAAI,CAAC,iBAAiB;AAClB,YAAM,mBAAmB;AAAA,IAC7B;AACA,WAAO,gBAAgB;AAAA,EAC3B;AAEA,iBAAsB,oBAAoB,KAAK,QAAQ,KAAK;AACxD,QAAI,KAAK;AACL,aAAO,OAAe,SAAS;AAC/B,YAAM,SACF,IAAI,SACJ,IAAI,YACH,OAAO,SAAS,IAAI,MAAM,OAAO,SAAS,IAAI,MAC/C,IAAI;AACR,iBAAW,QAAQ,aAAa,CAAC,GAAG,SAAS,OAAO,MAAM;AAC1D,YAAM,SAAS,MAAM,YAAY,GAAG;AACpC,iBAAW,WAAW,uCAAuC,MAAM;AAAA,IACvE;AAAA,EAEJ;;;ACvCA;AAAA,EACA;AACA,GAAC,iBAAkB;AACf,UAAM,MAAM,IAAI,IAAI,WAAW,SAAS,IAAI;AAC5C,UAAM,SAAS,IAAI,gBAAgB,IAAI,MAAM;AAC7C,UAAM,MAAM,OAAO,IAAY,SAAS;AACxC,QAAI,KAAK;AACL,YAAwB,oBAAoB,KAAK,QAAQ,GAAG;AAAA,IAChE;AAAA,EACJ,GAAG;",
  "names": []
}
